name: Tag and Release

on:
  push:
    branches:
      - main

jobs:
  tag:
    runs-on: ubuntu-latest

    if: "!contains(github.event.head_commit.message, '[skip ci]')"

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.PAT_TOKEN }}

      - name: Set up Git
        run: |
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'actions@github.com'

      - name: Get the current version from the file
        id: get_version
        run: |
          VERSION=$(cat VERSION)
          echo "Current version: $VERSION"
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Increment the version
        id: increment_version
        run: |
          IFS='.' read -r major minor patch <<< "$VERSION"
          new_patch=$((patch + 1))
          NEW_VERSION="$major.$minor.$new_patch"
          echo "Incrementing version to $NEW_VERSION"
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV

      - name: Update VERSION file
        run: |
          echo "Updating VERSION file to ${NEW_VERSION}"
          echo "${NEW_VERSION}" > VERSION
          git add VERSION
          git commit -m "Bump version to ${NEW_VERSION} [skip ci]"
          git push origin main
        env:
          NEW_VERSION: ${{ env.NEW_VERSION }}

      - name: Create and Push Tag
        run: |
          echo "Creating tag v${NEW_VERSION}"
          git tag "v${NEW_VERSION}"
          echo "Pushing tag v${NEW_VERSION}"
          git push origin "v${NEW_VERSION}"
        env:
          NEW_VERSION: ${{ env.NEW_VERSION }}

  release:
    runs-on: ubuntu-latest
    needs: tag

    if: "!contains(github.event.head_commit.message, '[skip ci]')"

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.PAT_TOKEN }}

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'

      - name: Cache Go Modules
        id: cache-modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Install dependencies
        run: go mod download

      - name: Run tests
        run: go test -v ./...

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
          NEW_VERSION: ${{ env.NEW_VERSION }}
        with:
          tag_name: "v${{ env.NEW_VERSION }}"
          release_name: "Release v${{ env.NEW_VERSION }}"
          body: |
            Changes in this release:
            - TODO: Add release notes here
          draft: false
          prerelease: false
